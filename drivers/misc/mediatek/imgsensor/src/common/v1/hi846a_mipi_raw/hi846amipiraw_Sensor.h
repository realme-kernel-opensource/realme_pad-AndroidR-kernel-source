/*
 * Copyright (C) 2015 MediaTek Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

/*****************************************************************************
 *
 * Filename:
 * ---------
 *	 hi846mipi_Sensor.h
 *
 * Project:
 * --------
 *	 ALPS
 *
 * Description:
 * ------------
 *	 CMOS sensor header file
 *
 ****************************************************************************/
#ifndef _HI846AMIPI_SENSOR_H
#define _HI846AMIPI_SENSOR_H

#include "kd_camera_typedef.h"
#include "kd_imgsensor.h"
#include "kd_imgsensor_define.h"
#include "kd_imgsensor_errcode.h"

enum IMGSENSOR_MODE{
	IMGSENSOR_MODE_INIT,
	IMGSENSOR_MODE_PREVIEW,
	IMGSENSOR_MODE_CAPTURE,
	IMGSENSOR_MODE_VIDEO,
	IMGSENSOR_MODE_HIGH_SPEED_VIDEO,
	IMGSENSOR_MODE_SLIM_VIDEO,
	IMGSENSOR_MODE_CUSTOM1,
	IMGSENSOR_MODE_CUSTOM2,
	IMGSENSOR_MODE_CUSTOM3,
	IMGSENSOR_MODE_CUSTOM4,
	IMGSENSOR_MODE_CUSTOM5,
};

struct imgsensor_mode_struct {
	kal_uint32 pclk;
	kal_uint32 linelength;
	kal_uint32 framelength;

	kal_uint8 startx;
	kal_uint8 starty;

	kal_uint16 grabwindow_width;
	kal_uint16 grabwindow_height;

	kal_uint8 mipi_data_lp2hs_settle_dc;

	/*	 following for GetDefaultFramerateByScenario()	*/
	kal_uint16 max_framerate;
	kal_uint32 mipi_pixel_rate;
};

/* SENSOR PRIVATE STRUCT FOR VARIABLES*/
struct imgsensor_struct {
	kal_uint8 mirror;				//mirrorflip information

	kal_uint8 sensor_mode; //record IMGSENSOR_MODE enum value

	kal_uint32 shutter;				//current shutter
	kal_uint16 gain;				//current gain

	kal_uint32 pclk;				//current pclk

	kal_uint32 frame_length;		//current framelength
	kal_uint32 line_length;			//current linelength

	kal_uint32 min_frame_length; //current min framelength to max
	kal_int32 dummy_pixel;			//current dummypixel
	kal_int32 dummy_line;			//current dummline

	kal_uint16 current_fps;			//current max fps
	kal_bool   autoflicker_en; //record autoflicker enable or disable
	kal_bool test_pattern; //record test pattern mode or not
	enum MSDK_SCENARIO_ID_ENUM current_scenario_id; //current scenario
	kal_bool  ihdr_en;				//ihdr enable or disable

	kal_uint8 i2c_write_id; //record current sensor's i2c write id
};

/* SENSOR PRIVATE STRUCT FOR CONSTANT*/
struct imgsensor_info_struct {
	kal_uint16 sensor_id; //record sensor id defined in Kd_imgsensor.h
	kal_uint32 checksum_value; //checksum value for Camera Auto Test
	struct imgsensor_mode_struct pre; //preview scenario
	struct imgsensor_mode_struct cap; //capture scenario
	struct imgsensor_mode_struct cap1; //capture for PIP 24fps
	struct imgsensor_mode_struct cap2; //capture for PIP 15ps
	struct imgsensor_mode_struct normal_video;//normal video info
	struct imgsensor_mode_struct hs_video; //high speed video relative info
	struct imgsensor_mode_struct slim_video; //slim video for VT
	struct imgsensor_mode_struct custom1; //custom1 scenario relative info
	struct imgsensor_mode_struct custom2; //custom2 scenario relative info
	struct imgsensor_mode_struct custom3; //custom3 scenario relative info
	struct imgsensor_mode_struct custom4; //custom4 scenario relative info
	struct imgsensor_mode_struct custom5; //custom5 scenario relative info

	kal_uint8  ae_shut_delay_frame; //shutter delay frame for AE cycle
	kal_uint8  ae_sensor_gain_delay_frame; //sensorgaindelfra for AEcycle
	kal_uint8  ae_ispGain_delay_frame; //ispgaindelayframe for AEcycle
	kal_uint8  ihdr_support;		//1, support; 0,not support
	kal_uint8  ihdr_le_firstline;	//1,le first ; 0, se first
	kal_uint8  sensor_mode_num;		//support sensor mode num

	kal_uint8  cap_delay_frame;		//enter capture delay frame num
	kal_uint8  pre_delay_frame;		//enter preview delay frame num
	kal_uint8  video_delay_frame; //enter video delay frame num
	kal_uint8  hs_video_delay_frame; //enter high speed videodelayframenum
	kal_uint8  slim_video_delay_frame; //enter slim video delay frame num
	kal_uint8  custom1_delay_frame;     //enter custom1 delay frame num
	kal_uint8  custom2_delay_frame;     //enter custom1 delay frame num
	kal_uint8  custom3_delay_frame;     //enter custom1 delay frame num
	kal_uint8  custom4_delay_frame;     //enter custom1 delay frame num
	kal_uint8  custom5_delay_frame;     //enter custom1 delay frame num

	kal_uint8  margin; //sensor framelength & shutter margin
	kal_uint32 min_shutter; //min shutter
	kal_uint32 min_gain;
	kal_uint32 max_gain;
	kal_uint32 min_gain_iso;
	kal_uint32 gain_step;
	kal_uint32 gain_type;
	kal_uint32 max_frame_length; //maxframelengthbysensor reg's limitation

	kal_uint8  isp_driving_current; //mclk driving current
	kal_uint8  sensor_interface_type;//sensor_interface_type
	kal_uint8  mipi_sensor_type;
	kal_uint8  mipi_settle_delay_mode;
	kal_uint8  sensor_output_dataformat;
	kal_uint8  mclk;

	kal_uint8  mipi_lane_num;		//mipi lane num
	kal_uint8  i2c_addr_table[5];
	kal_uint32  i2c_speed;     //i2c speed
};


extern int iReadRegI2C(u8 *a_pSendData, u16 a_sizeSendData, u8 *a_pRecvData,
				u16 a_sizeRecvData, u16 i2cId);
extern int iWriteRegI2C(u8 *a_pSendData, u16 a_sizeSendData, u16 i2cId);
extern void kdSetI2CSpeed(u16 i2cSpeed);
extern int iBurstWriteReg(u8 *pData, u32 bytes, u16 i2cId);

extern int iBurstWriteReg_multi(u8 *pData, u32 bytes, u16 i2cId,
	u16 transfer_length, u16 timing);

static kal_uint16 addr_data_pair_init_hi846[] = {
	// 2021-04-27 by lucas
    0x0066, 0x0101,
    0x2000, 0x98E8,
    0x2002, 0x00FF,
    0x2004, 0x0006,
    0x2008, 0x3FFF,
    0x200A, 0xC314,
    0x2022, 0x4130,
    0x2034, 0x1292,
    0x2036, 0xC02E,
    0x2038, 0x4130,
    0x206E, 0xF0B2,
    0x2070, 0xFFBF,
    0x2072, 0x2004,
    0x2074, 0x43C2,
    0x2076, 0x82FA,
    0x2078, 0x12B0,
    0x207A, 0xCAB0,
    0x207C, 0x42A2,
    0x207E, 0x7324,
    0x2080, 0x4130,
    0x2082, 0x120B,
    0x2084, 0x425B,
    0x2086, 0x008C,
    0x2088, 0x4292,
    0x208A, 0x7300,
    0x208C, 0x82F2,
    0x208E, 0x4292,
    0x2090, 0x7302,
    0x2092, 0x82F4,
    0x2094, 0x1292,
    0x2096, 0xC006,
    0x2098, 0x421F,
    0x209A, 0x0710,
    0x209C, 0x523F,
    0x209E, 0x4F82,
    0x20A0, 0x82E4,
    0x20A2, 0x93C2,
    0x20A4, 0x829F,
    0x20A6, 0x241E,
    0x20A8, 0x403E,
    0x20AA, 0xFFFE,
    0x20AC, 0x40B2,
    0x20AE, 0xEC78,
    0x20B0, 0x82EC,
    0x20B2, 0x40B2,
    0x20B4, 0xEC78,
    0x20B6, 0x82EE,
    0x20B8, 0x40B2,
    0x20BA, 0xEC78,
    0x20BC, 0x82F0,
    0x20BE, 0x934B,
    0x20C0, 0x2405,
    0x20C2, 0x4E0F,
    0x20C4, 0x503F,
    0x20C6, 0xFFD8,
    0x20C8, 0x4F82,
    0x20CA, 0x82EC,
    0x20CC, 0x907B,
    0x20CE, 0x0003,
    0x20D0, 0x200B,
    0x20D2, 0x421F,
    0x20D4, 0x82EC,
    0x20D6, 0x5E0F,
    0x20D8, 0x4F82,
    0x20DA, 0x82EE,
    0x20DC, 0x5E0F,
    0x20DE, 0x4F82,
    0x20E0, 0x82F0,
    0x20E2, 0x3C02,
    0x20E4, 0x432E,
    0x20E6, 0x3FE2,
    0x20E8, 0x413B,
    0x20EA, 0x4130,
    0x20EC, 0x421F,
    0x20EE, 0x7100,
    0x20F0, 0x4F0E,
    0x20F2, 0x503E,
    0x20F4, 0xFFD8,
    0x20F6, 0x4E82,
    0x20F8, 0x7A04,
    0x20FA, 0x421E,
    0x20FC, 0x82EC,
    0x20FE, 0x5F0E,
    0x2100, 0x4E82,
    0x2102, 0x7A06,
    0x2104, 0x0B00,
    0x2106, 0x7304,
    0x2108, 0x0050,
    0x210A, 0x40B2,
    0x210C, 0xD081,
    0x210E, 0x0B88,
    0x2110, 0x421E,
    0x2112, 0x82EE,
    0x2114, 0x5F0E,
    0x2116, 0x4E82,
    0x2118, 0x7A0E,
    0x211A, 0x521F,
    0x211C, 0x82F0,
    0x211E, 0x4F82,
    0x2120, 0x7A10,
    0x2122, 0x0B00,
    0x2124, 0x7304,
    0x2126, 0x007A,
    0x2128, 0x40B2,
    0x212A, 0x0081,
    0x212C, 0x0B88,
    0x212E, 0x4392,
    0x2130, 0x7A0A,
    0x2132, 0x0800,
    0x2134, 0x7A0C,
    0x2136, 0x0B00,
    0x2138, 0x7304,
    0x213A, 0x022B,
    0x213C, 0x40B2,
    0x213E, 0xD081,
    0x2140, 0x0B88,
    0x2142, 0x0B00,
    0x2144, 0x7304,
    0x2146, 0x0255,
    0x2148, 0x40B2,
    0x214A, 0x0081,
    0x214C, 0x0B88,
    0x214E, 0x9382,
    0x2150, 0x7112,
    0x2152, 0x2402,
    0x2154, 0x4392,
    0x2156, 0x760E,
    0x2158, 0x4130,
    0x215A, 0x120B,
    0x215C, 0x120A,
    0x215E, 0x4E0A,
    0x2160, 0x4F0B,
    0x2162, 0x4C0E,
    0x2164, 0x4D0F,
    0x2166, 0x8A0E,
    0x2168, 0x7B0F,
    0x216A, 0x2C02,
    0x216C, 0x4A0C,
    0x216E, 0x4B0D,
    0x2170, 0x4C0E,
    0x2172, 0x4D0F,
    0x2174, 0x413A,
    0x2176, 0x413B,
    0x2178, 0x4130,
    0x217A, 0x120B,
    0x217C, 0x120A,
    0x217E, 0x1209,
    0x2180, 0x1208,
    0x2182, 0x1207,
    0x2184, 0x1206,
    0x2186, 0x1205,
    0x2188, 0x42D2,
    0x218A, 0x82FA,
    0x218C, 0x82A0,
    0x218E, 0x403B,
    0x2190, 0x00C1,
    0x2192, 0x4B6F,
    0x2194, 0x4FC2,
    0x2196, 0x82D4,
    0x2198, 0x43C2,
    0x219A, 0x82D5,
    0x219C, 0x1292,
    0x219E, 0xC046,
    0x21A0, 0x4292,
    0x21A2, 0x7560,
    0x21A4, 0x82F6,
    0x21A6, 0x4292,
    0x21A8, 0x7562,
    0x21AA, 0x82F8,
    0x21AC, 0x93CB,
    0x21AE, 0x0000,
    0x21B0, 0x2452,
    0x21B2, 0x4215,
    0x21B4, 0x7316,
    0x21B6, 0x4216,
    0x21B8, 0x7318,
    0x21BA, 0x421F,
    0x21BC, 0x0710,
    0x21BE, 0x4F0E,
    0x21C0, 0x430F,
    0x21C2, 0x4507,
    0x21C4, 0x4608,
    0x21C6, 0x8E07,
    0x21C8, 0x7F08,
    0x21CA, 0x421F,
    0x21CC, 0x82E2,
    0x21CE, 0x522F,
    0x21D0, 0x4F09,
    0x21D2, 0x430A,
    0x21D4, 0x470D,
    0x21D6, 0x480E,
    0x21D8, 0x490B,
    0x21DA, 0x4A0C,
    0x21DC, 0x870B,
    0x21DE, 0x780C,
    0x21E0, 0x2C02,
    0x21E2, 0x490D,
    0x21E4, 0x4A0E,
    0x21E6, 0x4D0F,
    0x21E8, 0x43D2,
    0x21EA, 0x01B3,
    0x21EC, 0x4D82,
    0x21EE, 0x7324,
    0x21F0, 0x4292,
    0x21F2, 0x7540,
    0x21F4, 0x82E8,
    0x21F6, 0x4292,
    0x21F8, 0x7542,
    0x21FA, 0x82EA,
    0x21FC, 0x434B,
    0x21FE, 0x823F,
    0x2200, 0x4F0C,
    0x2202, 0x430D,
    0x2204, 0x421E,
    0x2206, 0x82E8,
    0x2208, 0x421F,
    0x220A, 0x82EA,
    0x220C, 0x5E0C,
    0x220E, 0x6F0D,
    0x2210, 0x870C,
    0x2212, 0x780D,
    0x2214, 0x2801,
    0x2216, 0x435B,
    0x2218, 0x4BC2,
    0x221A, 0x82FA,
    0x221C, 0x93C2,
    0x221E, 0x829A,
    0x2220, 0x201A,
    0x2222, 0x93C2,
    0x2224, 0x82A0,
    0x2226, 0x2404,
    0x2228, 0x43B2,
    0x222A, 0x7540,
    0x222C, 0x43B2,
    0x222E, 0x7542,
    0x2230, 0x93C2,
    0x2232, 0x82FA,
    0x2234, 0x2410,
    0x2236, 0x503E,
    0x2238, 0x0003,
    0x223A, 0x630F,
    0x223C, 0x4E82,
    0x223E, 0x82E8,
    0x2240, 0x4F82,
    0x2242, 0x82EA,
    0x2244, 0x450C,
    0x2246, 0x460D,
    0x2248, 0x8E0C,
    0x224A, 0x7F0D,
    0x224C, 0x2C04,
    0x224E, 0x4582,
    0x2250, 0x82E8,
    0x2252, 0x4682,
    0x2254, 0x82EA,
    0x2256, 0x4135,
    0x2258, 0x4136,
    0x225A, 0x4137,
    0x225C, 0x4138,
    0x225E, 0x4139,
    0x2260, 0x413A,
    0x2262, 0x413B,
    0x2264, 0x4130,
    0x2266, 0x403E,
    0x2268, 0x00C2,
    0x226A, 0x421F,
    0x226C, 0x7314,
    0x226E, 0xF07F,
    0x2270, 0x000C,
    0x2272, 0x5F4F,
    0x2274, 0x5F4F,
    0x2276, 0xDFCE,
    0x2278, 0x0000,
    0x227A, 0xF0FE,
    0x227C, 0x000F,
    0x227E, 0x0000,
    0x2280, 0x4130,
    0x2282, 0x120B,
    0x2284, 0x120A,
    0x2286, 0x1209,
    0x2288, 0x1208,
    0x228A, 0x1207,
    0x228C, 0x1206,
    0x228E, 0x93C2,
    0x2290, 0x00C1,
    0x2292, 0x249F,
    0x2294, 0x425E,
    0x2296, 0x00C2,
    0x2298, 0xC35E,
    0x229A, 0x425F,
    0x229C, 0x82A0,
    0x229E, 0xDF4E,
    0x22A0, 0x4EC2,
    0x22A2, 0x00C2,
    0x22A4, 0x934F,
    0x22A6, 0x248F,
    0x22A8, 0x4217,
    0x22AA, 0x7316,
    0x22AC, 0x4218,
    0x22AE, 0x7318,
    0x22B0, 0x4326,
    0x22B2, 0xB3E2,
    0x22B4, 0x00C2,
    0x22B6, 0x2482,
    0x22B8, 0x0900,
    0x22BA, 0x731C,
    0x22BC, 0x0800,
    0x22BE, 0x731C,
    0x22C0, 0x421A,
    0x22C2, 0x7300,
    0x22C4, 0x421B,
    0x22C6, 0x7302,
    0x22C8, 0x421F,
    0x22CA, 0x7304,
    0x22CC, 0x9F82,
    0x22CE, 0x829C,
    0x22D0, 0x2C02,
    0x22D2, 0x531A,
    0x22D4, 0x630B,
    0x22D6, 0x4A0E,
    0x22D8, 0x4B0F,
    0x22DA, 0x821E,
    0x22DC, 0x82F2,
    0x22DE, 0x721F,
    0x22E0, 0x82F4,
    0x22E2, 0x2C68,
    0x22E4, 0x4A09,
    0x22E6, 0x9339,
    0x22E8, 0x3460,
    0x22EA, 0x0B00,
    0x22EC, 0x7304,
    0x22EE, 0x0320,
    0x22F0, 0x421E,
    0x22F2, 0x7300,
    0x22F4, 0x421F,
    0x22F6, 0x7302,
    0x22F8, 0x531E,
    0x22FA, 0x630F,
    0x22FC, 0x4E0C,
    0x22FE, 0x4F0D,
    0x2300, 0x821C,
    0x2302, 0x82F6,
    0x2304, 0x721D,
    0x2306, 0x82F8,
    0x2308, 0x2C0E,
    0x230A, 0x93B2,
    0x230C, 0x7560,
    0x230E, 0x2003,
    0x2310, 0x93B2,
    0x2312, 0x7562,
    0x2314, 0x2408,
    0x2316, 0x4E82,
    0x2318, 0x7540,
    0x231A, 0x4F82,
    0x231C, 0x7542,
    0x231E, 0x4E82,
    0x2320, 0x82F6,
    0x2322, 0x4F82,
    0x2324, 0x82F8,
    0x2326, 0x4E82,
    0x2328, 0x7316,
    0x232A, 0x12B0,
    0x232C, 0xFE66,
    0x232E, 0x0900,
    0x2330, 0x730E,
    0x2332, 0x403F,
    0x2334, 0x7316,
    0x2336, 0x4A09,
    0x2338, 0x8F29,
    0x233A, 0x478F,
    0x233C, 0x0000,
    0x233E, 0x460C,
    0x2340, 0x430D,
    0x2342, 0x421E,
    0x2344, 0x7300,
    0x2346, 0x421F,
    0x2348, 0x7302,
    0x234A, 0x9C0E,
    0x234C, 0x23F8,
    0x234E, 0x9D0F,
    0x2350, 0x23F6,
    0x2352, 0x0B00,
    0x2354, 0x7304,
    0x2356, 0x01F4,
    0x2358, 0x5036,
    0x235A, 0x0006,
    0x235C, 0x460C,
    0x235E, 0x430D,
    0x2360, 0x490E,
    0x2362, 0x4E0F,
    0x2364, 0x5F0F,
    0x2366, 0x7F0F,
    0x2368, 0xE33F,
    0x236A, 0x521E,
    0x236C, 0x82E8,
    0x236E, 0x621F,
    0x2370, 0x82EA,
    0x2372, 0x12B0,
    0x2374, 0xFD5A,
    0x2376, 0x4E82,
    0x2378, 0x7540,
    0x237A, 0x4F82,
    0x237C, 0x7542,
    0x237E, 0x403B,
    0x2380, 0x7316,
    0x2382, 0x421C,
    0x2384, 0x82E4,
    0x2386, 0x430D,
    0x2388, 0x4B2F,
    0x238A, 0x590F,
    0x238C, 0x4F0E,
    0x238E, 0x430F,
    0x2390, 0x12B0,
    0x2392, 0xFD5A,
    0x2394, 0x4E8B,
    0x2396, 0x0000,
    0x2398, 0x4BA2,
    0x239A, 0x82CE,
    0x239C, 0x4382,
    0x239E, 0x82D0,
    0x23A0, 0x12B0,
    0x23A2, 0xFE66,
    0x23A4, 0xD3D2,
    0x23A6, 0x00C2,
    0x23A8, 0x3C16,
    0x23AA, 0x9329,
    0x23AC, 0x3BC8,
    0x23AE, 0x4906,
    0x23B0, 0x5326,
    0x23B2, 0x3FC5,
    0x23B4, 0x4A09,
    0x23B6, 0x8219,
    0x23B8, 0x82CE,
    0x23BA, 0x3F95,
    0x23BC, 0x0800,
    0x23BE, 0x731C,
    0x23C0, 0x0900,
    0x23C2, 0x731C,
    0x23C4, 0x3F7D,
    0x23C6, 0x0900,
    0x23C8, 0x730C,
    0x23CA, 0x0B00,
    0x23CC, 0x7304,
    0x23CE, 0x01F4,
    0x23D0, 0x3FE9,
    0x23D2, 0x0900,
    0x23D4, 0x732C,
    0x23D6, 0x425F,
    0x23D8, 0x0788,
    0x23DA, 0x4136,
    0x23DC, 0x4137,
    0x23DE, 0x4138,
    0x23E0, 0x4139,
    0x23E2, 0x413A,
    0x23E4, 0x413B,
    0x23E6, 0x4130,
    0x23FE, 0xC056,
    0x3236, 0xFC22,
    0x323A, 0xFCEC,
    0x323C, 0xFC82,
    0x323E, 0xFD7A,
    0x3246, 0xFE82,
    0x3248, 0xFC34,
    0x324E, 0xFC6E,
    0x326A, 0xC374,
    0x326C, 0xC37C,
    0x326E, 0x0000,
    0x3270, 0xC378,
    0x32E2, 0x0020,

    0x0A00, 0x0000, 
    0x0E04, 0x0012, 
    0x002E, 0x1111, 
    0x0032, 0x1111, 
    0x0022, 0x0008, 
    0x0026, 0x0040, 
    0x0028, 0x0017, 
    0x002C, 0x09CF, 
    0x005C, 0x2101, 
    0x0006, 0x09DE, 
    0x0008, 0x0ED8, 
    0x000E, 0x0100, 
    0x000C, 0x0022, 
    0x0A22, 0x0000, 
    0x0A24, 0x0000, 
    0x0804, 0x0000, 
    0x0A12, 0x0CC0, 
    0x0A14, 0x0990, 
    0x0710, 0x09B0, 
    0x0074, 0x09D8, 
    0x0076, 0x0000, 
    0x051E, 0x0000, 
    0x0200, 0x0400, 
    0x0A1A, 0x0C00, 
    0x0A0C, 0x0010, 
    0x0A1E, 0x0CCF, 
    0x0402, 0x0110, 
    0x0404, 0x00F4, 
    0x0408, 0x0000, 
    0x0410, 0x008D, 
    0x0412, 0x011A, 
    0x0414, 0x864C, 
    0x021C, 0x0001, 
    0x0C00, 0x9950, 
    0x0C06, 0x0021, 
    0x0C10, 0x0040, 
    0x0C12, 0x0040, 
    0x0C14, 0x0040, 
    0x0C16, 0x0040, 
    0x0A02, 0x0100, 
    0x0A04, 0x014A, 
    0x0418, 0x0000, 
    0x0128, 0x0028, 
    0x012A, 0xFFFF, 
    0x0120, 0x0046, 
    0x0122, 0x0376, 
    0x012C, 0x0020, 
    0x012E, 0xFFFF, 
    0x0124, 0x0040, 
    0x0126, 0x0378, 
    0x0746, 0x0050, 
    0x0748, 0x01D5, 
    0x074A, 0x022B, 
    0x074C, 0x03B0, 
    0x0756, 0x043F, 
    0x0758, 0x3F1D, 
    0x0B02, 0xE04D, 
    0x0B10, 0x6821, 
    0x0B12, 0x0120, 
    0x0B14, 0x0001, 
    0x2008, 0x38FD, 
    0x326E, 0x0000, 
    0x0900, 0x0300, 
    0x0902, 0xC319, 
    0x0914, 0xC109, 
    0x0916, 0x061A, 
    0x0918, 0x0407, 
    0x091A, 0x0A0B, 
    0x091C, 0x0E08, 
    0x091E, 0x0A00, 
    0x090C, 0x0427, 
    0x090E, 0x0059, 
    0x0954, 0x0089, 
    0x0956, 0x0000, 
    0x0958, 0xCA80, 
    0x095A, 0x924e, 
    0x0040, 0x0200, 
    0x0042, 0x0100, 
    0x0D04, 0x0000, 
    0x0F08, 0x2F04, 
    0x0F30, 0x001F, 
    0x0F36, 0x001F, 
    0x0F04, 0x3A00, 
    0x0F32, 0x025A, 
    0x0F38, 0x025A, 
    0x0F2A, 0x4124, 
    0x006A, 0x0100, 
    0x004C, 0x0100, 
    0x0044, 0x0001,
};

static kal_uint16 addr_data_pair_preview_hi846[] = {
//Sensor Information////////////////////////////
//Sensor	  : Hi-846
//Date		  : 2020-04-26
//Customer        : OPPO                    
//Image size      : 1632x1224
//MCLK/PCLK       : 24MHz /288Mhz
//MIPI speed(Mbps): 360Mbps x 4Lane
//Frame Length    : 2526
//Line Length     : 3800
//Max Fps         : 30.00fps(vblank>17.1ms)
//Pixel order     : Green 1st (=GB)
//X/Y-flip        : X-flip
//Firmware Ver.   : v10.5.1
////////////////////////////////////////////////
    0x002E, 0x3311, 
    0x0032, 0x3311, 
    0x0026, 0x0040, 
    0x002C, 0x09CF, 
    0x005C, 0x4202, 
    0x0006, 0x09DE, 
    0x0008, 0x0ED8, 
    0x000C, 0x0122, 
    0x0A22, 0x0100, 
    0x0A24, 0x0000, 
    0x0804, 0x0000, 
    0x0A12, 0x0660, 
    0x0A14, 0x04C8, 
    0x0074, 0x09D8, 
    0x021C, 0x0001, 
    0x0A04, 0x016A, 
    0x0418, 0x0000, 
    0x0128, 0x0028, 
    0x012A, 0xFFFF, 
    0x0120, 0x0046, 
    0x0122, 0x0376, 
    0x012C, 0x0020, 
    0x012E, 0xFFFF, 
    0x0124, 0x0040, 
    0x0126, 0x0378, 
    0x0B02, 0xE04D, 
    0x0B10, 0x6C21, 
    0x0B12, 0x0120, 
    0x0B14, 0x0005, 
    0x2008, 0x38FD, 
    0x326E, 0x0000, 
    0x0710, 0x04E0, 
//========================================================
//      MIPI 4lane 360Mbps
//========================================================
    0x0900, 0x0300, 
    0x0902, 0xC319, 
    0x0914, 0xC105, 
    0x0916, 0x030C, 
    0x0918, 0x0304, 
    0x091A, 0x0708, 
    0x091C, 0x0B04, 
    0x091E, 0x0500, 
    0x090C, 0x0208, 
    0x090E, 0x001C, 
    0x0954, 0x0089, 
    0x0956, 0x0000, 
    0x0958, 0xCA80, 
    0x095A, 0x924e, 
    0x0F32, 0x025A, 
    0x0F38, 0x025A, 
    0x0F2A, 0x4924, 
    0x004C, 0x0100, 
};

static kal_uint16 addr_data_pair_capture_fps_hi846[] = {
    // no modify
	0x002E, 0x1111,
	0x0032, 0x1111,
	0x0026, 0x0040,
	0x002C, 0x09CF,
	0x005C, 0x2101,
	0x0006, 0x13BC,
	0x0008, 0x0ED8,
	0x000C, 0x0022,
	0x0A22, 0x0000,
	0x0A24, 0x0000,
	0x0804, 0x0000,
	0x0A12, 0x0CC0,
	0x0A14, 0x0990,
	0x0074, 0x13B6,
	0x021C, 0x0001,				
	0x0A04, 0x014A,
	0x0418, 0x0000,
	0x0B02, 0xE04D,
	0x0B10, 0x6821,
	0x0B12, 0x0120,
	0x0B14, 0x0001,
	0x2008, 0x38FD,
	0x326E, 0x0000,
	0x0900, 0x0300,
	0x0902, 0xC319,
	0x0914, 0xC109,
	0x0916, 0x061A,
	0x0918, 0x0407,
	0x091A, 0x0A0B,
	0x091C, 0x0E08,
	0x091E, 0x0A00,
	0x090C, 0x0427,
	0x090E, 0x0059,
	0x0954, 0x0089,
	0x0956, 0x0000,
	0x0958, 0xCA80,
	0x095A, 0x924e,
	0x0F2A, 0x4124,
	0x004C, 0x0100,
};

static kal_uint16 addr_data_pair_capture_30fps_hi846[] = {
//Sensor Information////////////////////////////
//Sensor	  : Hi-846
//Date		  : 2020-04-26
//Customer        : OPPO                    
//Image size      : 3264x2448
//MCLK/PCLK       : 24MHz /288Mhz
//MIPI speed(Mbps): 720Mbps x 4Lane
//Frame Length    : 2526
//Line Length     : 3800
//Max Fps         : 30.00fps(vblank>1.0ms)
//Pixel order     : Green 1st (=GB)
//X/Y-flip        : X-flip
//Firmware Ver.   : v10.5.1
////////////////////////////////////////////////
    0x002E, 0x1111,
    0x0032, 0x1111, 
    0x0026, 0x0040, 
    0x002C, 0x09CF, 
    0x005C, 0x2101, 
    0x0006, 0x09DE, 
    0x0008, 0x0ED8, 
    0x000C, 0x0022, 
    0x0A22, 0x0000, 
    0x0A24, 0x0000, 
    0x0804, 0x0000, 
    0x0A12, 0x0CC0, 
    0x0A14, 0x0990, 
    0x0074, 0x09D8, 
    0x021C, 0x0001, 
    0x0A04, 0x014A, 
    0x0418, 0x0000, 
    0x0128, 0x0028, 
    0x012A, 0xFFFF, 
    0x0120, 0x0046, 
    0x0122, 0x0376, 
    0x012C, 0x0020, 
    0x012E, 0xFFFF, 
    0x0124, 0x0040, 
    0x0126, 0x0378, 
    0x0B02, 0xE04D, 
    0x0B10, 0x6821, 
    0x0B12, 0x0120, 
    0x0B14, 0x0001, 
    0x2008, 0x38FD, 
    0x326E, 0x0000, 
    0x0710, 0x09B0, 
//========================================================
//      MIPI 4lane 720Mbps
//========================================================
    0x0900, 0x0300,
    0x0902, 0xC319,
    0x0914, 0xC109,
    0x0916, 0x061A,
    0x0918, 0x0407,
    0x091A, 0x0A0B,
    0x091C, 0x0E08,
    0x091E, 0x0A00,
    0x090C, 0x0427,
    0x090E, 0x0059,
    0x0954, 0x0089,
    0x0956, 0x0000,
    0x0958, 0xCA80,
    0x095A, 0x924e,
    0x0F32, 0x025A,
    0x0F38, 0x025A,
    0x0F2A, 0x4124,
    0x004C, 0x0100,
};

static kal_uint16 addr_data_pair_video_hi846[] = {
//Sensor Information////////////////////////////
//Sensor	  : Hi-846
//Date		  : 2020-04-26
//Customer        : OPPO                    
//Image size	  : 3264x1840
//MCLK/PCLK       : 24MHz /288Mhz
//MIPI speed(Mbps): 720Mbps x 4Lane
//Frame Length    : 2526
//Line Length     : 3800
//Max Fps         : 30.00fps(vblank>9.0ms)
//Pixel order     : Green 1st (=GB)
//X/Y-flip        : X-flip
//Firmware Ver.   : v10.5.1
////////////////////////////////////////////////
    0x002E, 0x1111, 
    0x0032, 0x1111, 
    0x0026, 0x0170, 
    0x002C, 0x089F, 
    0x005C, 0x2101, 
    0x0006, 0x09DE, 
    0x0008, 0x0ED8, 
    0x000C, 0x0022, 
    0x0A22, 0x0000, 
    0x0A24, 0x0000, 
    0x0804, 0x0000, 
    0x0A12, 0x0CC0, 
    0x0A14, 0x0730, 
    0x0074, 0x09D8, 
    0x021C, 0x0001, 
    0x0A04, 0x014A, 
    0x0418, 0x023E, 
    0x0128, 0x0028, 
    0x012A, 0xFFFF, 
    0x0120, 0x0046, 
    0x0122, 0x0376, 
    0x012C, 0x0020, 
    0x012E, 0xFFFF, 
    0x0124, 0x0040, 
    0x0126, 0x0378, 
    0x0B02, 0xE04D, 
    0x0B10, 0x6821, 
    0x0B12, 0x0120, 
    0x0B14, 0x0001, 
    0x2008, 0x38FD, 
    0x326E, 0x0000, 
    0x0710, 0x0750, 
//========================================================
//      MIPI 4lane 720Mbps
//========================================================
    0x0900, 0x0300, 
    0x0902, 0xC319, 
    0x0914, 0xC109, 
    0x0916, 0x061A, 
    0x0918, 0x0407, 
    0x091A, 0x0A0B, 
    0x091C, 0x0E08, 
    0x091E, 0x0A00, 
    0x090C, 0x0427, 
    0x090E, 0x0059, 
    0x0954, 0x0089, 
    0x0956, 0x0000, 
    0x0958, 0xCA80, 
    0x095A, 0x924e, 
    0x0F32, 0x025A, 
    0x0F38, 0x025A, 
    0x0F2A, 0x4124, 
    0x004C, 0x0100, 
};

static kal_uint16 addr_data_pair_hs_video_hi846[] = {
//Sensor Information////////////////////////////
//Sensor	  : Hi-846
//Date		  : 2020-04-26
//Customer        : OPPO                    
//Image size	  : 640x480
//MCLK/PCLK       : 24MHz /288Mhz
//MIPI speed(Mbps): 180Mbps x 4Lane
//Frame Length	  :  631
//Line Length     : 3800
//Max Fps 	  : 120.10fps(vblank>1.9ms)
//Pixel order     : Green 1st (=GB)
//X/Y-flip        : X-flip
//Firmware Ver.   : v10.5.1
////////////////////////////////////////////////
    0x002E, 0x7711,
    0x0032, 0x7711,
    0x0026, 0x0148,
    0x002C, 0x08C7,
    0x005C, 0x4404,
    0x0006, 0x0277,
    0x0008, 0x0ED8,
    0x000C, 0x0322,
    0x0A22, 0x0200,
    0x0A24, 0x0000,
    0x0804, 0x0058,
    0x0A12, 0x0280,
    0x0A14, 0x01E0,
    0x0074, 0x0271,
    0x021C, 0x0001,
    0x0A04, 0x016A,
    0x0418, 0x0210,
    0x0128, 0x0028,
    0x012A, 0xFFFF,
    0x0120, 0x0046,
    0x0122, 0x0376,
    0x012C, 0x0020,
    0x012E, 0xFFFF,
    0x0124, 0x0040,
    0x0126, 0x0378,
    0x0B02, 0xE04D,
    0x0B10, 0x7021,
    0x0B12, 0x0120,
    0x0B14, 0x0001,
    0x2008, 0x38FD,
    0x326E, 0x0000,
    0x0710, 0x01F2,
//========================================================
//      MIPI 4lane 180Mbps
//========================================================
    0x0900, 0x0300,
    0x0902, 0xC319,
    0x0914, 0xC103,
    0x0916, 0x0207,
    0x0918, 0x0202,
    0x091A, 0x0305,
    0x091C, 0x0902,
    0x091E, 0x0300,
    0x090C, 0x00FB,
    0x090E, 0x000C,
    0x0954, 0x0089,
    0x0956, 0x0000,
    0x0958, 0xCA80,
    0x095A, 0x924e,
    0x0F32, 0x025A,
    0x0F38, 0x025A,
    0x0F2A, 0x5124,
    0x004C, 0x0100,
};

static kal_uint16 addr_data_pair_slim_video_hi846[] = {
//Sensor Information////////////////////////////
//Sensor	  : Hi-846
//Date		  : 2020-04-26
//Customer        : OPPO                    
//Image size	  : 1280x720
//MCLK/PCLK       : 24MHz /288Mhz
//MIPI speed(Mbps): 360Mbps x 4Lane             
//Frame Length	  :  842                        
//Line Length 	  : 3800
//Max Fps 	  : 90.01fps(vblank>1.6ms)                        
//Pixel order 	  : Green 1st (=GB)
//X/Y-flip        : X-flip
//Firmware Ver.   : v10.5.1                         
////////////////////////////////////////////////
    0x002E, 0x3311,
    0x0032, 0x3311,
    0x0026, 0x0238,
    0x002C, 0x07D7,
    0x005C, 0x4202,
    0x0006, 0x034A,
    0x0008, 0x0ED8,
    0x000C, 0x0122,
    0x0A22, 0x0100,
    0x0A24, 0x0000,
    0x0804, 0x00B0,
    0x0A12, 0x0500,
    0x0A14, 0x02D0,
    0x0074, 0x0344,
    0x021C, 0x0001,
    0x0A04, 0x016A,
    0x0418, 0x0410,
    0x0128, 0x0028,
    0x012A, 0xFFFF,
    0x0120, 0x0046,
    0x0122, 0x0376,
    0x012C, 0x0020,
    0x012E, 0xFFFF,
    0x0124, 0x0040,
    0x0126, 0x0378,
    0x0B02, 0xE04D,
    0x0B10, 0x6C21,
    0x0B12, 0x0120,
    0x0B14, 0x0005,
    0x2008, 0x38FD,
    0x326E, 0x0000,
    0x0710, 0x02E8,
//========================================================
//      MIPI 4lane 360Mbps
//========================================================
    0x0900, 0x0300, 
    0x0902, 0xC319, 
    0x0914, 0xC105, 
    0x0916, 0x030C, 
    0x0918, 0x0304, 
    0x091A, 0x0708, 
    0x091C, 0x0B04, 
    0x091E, 0x0500, 
    0x090C, 0x0208, 
    0x090E, 0x008A, 
    0x0954, 0x0089, 
    0x0956, 0x0000, 
    0x0958, 0xCA80, 
    0x095A, 0x924e, 
    0x0F32, 0x025A, 
    0x0F38, 0x025A, 
    0x0F2A, 0x4924, 
    0x004C, 0x0100, 
};


#endif
